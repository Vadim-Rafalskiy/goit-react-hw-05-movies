{"version":3,"file":"static/js/75.f96b71ec.chunk.js","mappings":"oPACA,EAAuB,sBAAvB,EAAsD,wBAAtD,EAAqF,sB,SCuCrF,EAjCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAgBP,GAFlB,OAEXQ,EAFW,OAGjBJ,EAAWI,EAAKC,SAHC,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SALT,yDAAH,qDASlBP,GACD,GAAE,CAACN,IAEJ,IAAMc,EAAW,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAASY,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAC/B,gBAAIC,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,SAA+BH,KAC/B,uBAAIC,MAF2BF,EADF,IAO3BK,GAAuB,OAAXP,QAAW,IAAXA,OAAA,EAAAA,EAAaQ,QAAS,EAExC,OACE,eAAIH,UAAWC,EAAf,SACGC,EAAYP,EAAc,yBAGhC,C,sLCpCKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAASO,IAAI,kBAAmB,CACrDJ,OAAQ,CACNK,MAAOF,KAHiB,uBACpBrB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdwB,EAAiB,mCAAG,sGACRT,EAASO,IAAI,wBADL,uBACvBtB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjByB,EAAe,mCAAG,WAAMjC,GAAN,yFACNuB,EAASO,IAAT,iBAAuB9B,GAAM,CAClD0B,OAAQ,CAAEQ,SAAU,WAFO,uBACrB1B,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOf2B,EAAe,mCAAG,WAAMnC,GAAN,yFACNuB,EAASO,IAAT,iBAAuB9B,EAAvB,YAAqC,CAC1D0B,OAAQ,CAAEQ,SAAU,WAFO,uBACrB1B,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfD,EAAe,mCAAG,WAAMP,GAAN,yFACNuB,EAASO,IAAT,iBAAuB9B,EAAvB,YAAqC,CAC1D0B,OAAQ,CAAEQ,SAAU,WAFO,uBACrB1B,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.scss?0ade","components/Reviews/Reviews.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__nNx+o\",\"author\":\"Reviews_author__GC1-s\",\"list\":\"Reviews_list__Dwzjr\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'shared/services/movie-api';\n\nimport styles from './Reviews.module.scss';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getMovieReviews(id);\n        setReviews(data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  const reviewsList = reviews?.map(({ author, content }, index) => (\n    <li className={styles.item} key={index}>\n      <h5 className={styles.author}>{author}</h5>\n      <p>{content}</p>\n    </li>\n  ));\n\n  const isReviews = reviewsList?.length > 0;\n\n  return (\n    <ul className={styles.list}>\n      {isReviews ? reviewsList : 'There are no reviews.'}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '707c1f9314db773250e6b474a61bb845',\n  },\n});\n\nexport const searchKeywords = async search => {\n  const { data } = await instance.get('/search/keyword', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getMovieReviews","data","results","response","console","log","message","reviewsList","map","index","author","content","className","styles","isReviews","length","instance","axios","baseURL","params","api_key","searchKeywords","search","get","query","getTrendingMovies","getMovieDetails","language","getMovieCredits"],"sourceRoot":""}