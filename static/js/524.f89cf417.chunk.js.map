{"version":3,"file":"static/js/524.f89cf417.chunk.js","mappings":"8PACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAuH,oCAAvH,EAAmL,yCAAnL,EAA8O,mC,SCKxOA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAML,SARW,SAAAM,GACnBA,EAAEC,iBACFP,EAASE,GACTC,EAAU,GACX,EAIiCC,UAAWC,EAAzC,WACE,kBACEG,SAfa,SAAC,GAAgB,IAC5BC,EAD2B,EAAbC,OACdD,MACRN,EAAUM,EACX,EAaOA,MAAOP,EACPE,UAAWC,EACXM,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,SACZC,UAAQ,KAEV,mBAAQJ,KAAK,SAASR,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,UACE,gBAAKY,IAAI,qBAAqBC,IAAI,mBAM7C,EAED,GAAeC,EAAAA,EAAAA,MAAKpB,G,SC3CpB,EAAuB,qBCwDvB,EAhDe,WACb,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOmB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAASqB,EAAaE,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACR,GAAIxB,EAAQ,CACV,IAAMyB,EAAW,mCAAG,kHAEUC,EAAAA,EAAAA,IAAe1B,GAFzB,gBAER2B,EAFQ,EAERA,QACRR,GAAS,OAAIQ,IAHG,gDAIPC,EAJO,KAIPA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SALV,yDAAH,qDASjBP,GACD,CACF,GAAE,CAACzB,IAEJ,IAIMiC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWjB,EAAMkB,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAI5B,EAAW,EAAXA,KAChC,OACE,SAAC,KAAD,CACEP,UAAWC,EAEXmC,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMP,GAJjB,UAME,wBAAKxB,KAJA4B,EAOV,IAED,OACE,iCACE,SAAC,EAAD,CAAWvC,SArBK,SAAAE,GAClBsB,EAAgB,CAAEtB,OAAAA,IAClBmB,EAAS,GACV,KAmBG,wBAAKgB,MAGV,C,sLCrDKM,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAnB,EAAc,mCAAG,WAAM1B,GAAN,yFACLyC,EAASlB,IAAI,kBAAmB,CACrDqB,OAAQ,CACNE,MAAO9C,KAHiB,uBACpB+B,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdgB,EAAiB,mCAAG,sGACRN,EAASlB,IAAI,wBADL,uBACvBQ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBiB,EAAe,mCAAG,WAAMX,GAAN,yFACNI,EAASlB,IAAT,iBAAuBc,GAAM,CAClDO,OAAQ,CAAEK,SAAU,WAFO,uBACrBlB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfmB,EAAe,mCAAG,WAAMb,GAAN,yFACNI,EAASlB,IAAT,iBAAuBc,EAAvB,YAAqC,CAC1DO,OAAQ,CAAEK,SAAU,WAFO,uBACrBlB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfoB,EAAe,mCAAG,WAAMd,GAAN,yFACNI,EAASlB,IAAT,iBAAuBc,EAAvB,YAAqC,CAC1DO,OAAQ,CAAEK,SAAU,WAFO,uBACrBlB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Searchbar/SearchBar.module.scss?48c6","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/Pages/Movies/Movies.module.scss?9cd3","components/Pages/Movies/Movies.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__WBxpT\",\"searchForm\":\"SearchBar_searchForm__12jPt\",\"searchFormButton\":\"SearchBar_searchFormButton__8tA0F\",\"searchFormButtonLabel\":\"SearchBar_searchFormButtonLabel__urVAc\",\"searchFormInput\":\"SearchBar_searchFormInput__BzAfu\"};","import { useState, memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './SearchBar.module.scss';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setSearch(value);\n  };\n\n  const handleSabmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form onSubmit={handleSabmit} className={styles.searchForm}>\n        <input\n          onChange={handleChange}\n          value={search}\n          className={styles.searchFormInput}\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          required\n        />\n        <button type=\"submit\" className={styles.searchFormButton}>\n          <span className={styles.searchFormButtonLabel}>\n            <img src=\"./images/serch.png\" alt=\"search\" />\n          </span>\n        </button>\n      </form>\n    </header>\n  );\n};\n\nexport default memo(SearchBar);\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Movies_link__C+Lv0\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nimport SearchBar from 'components/Searchbar/Searchbar';\n\nimport { searchKeywords } from 'shared/services/movie-api';\n\nimport styles from './Movies.module.scss';\n\nconst Movies = () => {\n  const [items, setItems] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (search) {\n      const fetchSearch = async () => {\n        try {\n          const { results } = await searchKeywords(search);\n          setItems([...results]);\n        } catch ({ response }) {\n          console.log(response.data.message);\n        }\n      };\n\n      fetchSearch();\n    }\n  }, [search]);\n\n  const searchQuery = search => {\n    setSearchParams({ search });\n    setItems([]);\n  };\n  const location = useLocation();\n\n  const elements = items.map(({ id, name }) => {\n    return (\n      <Link\n        className={styles.link}\n        key={id}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <li>{name}</li>\n      </Link>\n    );\n  });\n\n  return (\n    <>\n      <SearchBar onSubmit={searchQuery} />\n      <ul>{elements}</ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '707c1f9314db773250e6b474a61bb845',\n  },\n});\n\nexport const searchKeywords = async search => {\n  const { data } = await instance.get('/search/keyword', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: { language: 'en-US' },\n  });\n  return data;\n};\n"],"names":["SearchBar","onSubmit","useState","search","setSearch","className","styles","e","preventDefault","onChange","value","target","name","type","autoComplete","autoFocus","placeholder","required","src","alt","memo","items","setItems","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearch","searchKeywords","results","response","console","log","data","message","location","useLocation","elements","map","id","to","state","from","instance","axios","baseURL","params","api_key","query","getTrendingMovies","getMovieDetails","language","getMovieCredits","getMovieReviews"],"sourceRoot":""}